
*** src/proto/client/ent.rs:38:9: replace Client<S>::open_batch -> Result<Option<BatchHandle<'_, S>>, Error> with Ok(Some(BatchHandle::new()))

*** mutation diff:
--- src/proto/client/ent.rs
+++ replace Client<S>::open_batch -> Result<Option<BatchHandle<'_, S>>, Error> with Ok(Some(BatchHandle::new()))
@@ -30,18 +30,17 @@
         Ok(BatchHandle::new(bid, self))
     }
 
     /// Open an already existing batch of jobs.
     ///
     /// This will not error if a batch with the provided `bid` does not exist,
     /// rather `Ok(None)` will be returned.
     pub async fn open_batch(&mut self, bid: BatchId) -> Result<Option<BatchHandle<'_, S>>, Error> {
-        let bid = self.issue(&OpenBatch::from(bid)).await?.maybe_bid().await?;
-        Ok(bid.map(|bid| BatchHandle::new(bid, self)))
+        Ok(Some(BatchHandle::new())) /* ~ changed by cargo-mutants ~ */
     }
 
     pub(crate) async fn commit_batch(&mut self, bid: BatchId) -> Result<(), Error> {
         self.issue(&CommitBatch::from(bid)).await?.read_ok().await
     }
 }
 
 impl<'a, S: AsyncBufReadExt + AsyncWriteExt + Unpin + Send> ReadToken<'a, S> {


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 0.79s

*** result: Success

*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml --locked --all-features --all-targets
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
error[E0061]: this function takes 2 arguments but 0 arguments were supplied
  --> src/proto/client/ent.rs:38:17
   |
38 |         Ok(Some(BatchHandle::new())) /* ~ changed by cargo-mutants ~ */
   |                 ^^^^^^^^^^^^^^^^-- two arguments of type `BatchId` and `&mut Client<S>` are missing
   |
note: associated function defined here
  --> src/proto/batch/handle.rs:17:19
   |
17 |     pub(crate) fn new(bid: BatchId, c: &mut Client<S>) -> BatchHandle<'_, S> {
   |                   ^^^ ------------  -----------------
help: provide the arguments
   |
38 |         Ok(Some(BatchHandle::new(/* BatchId */, /* &mut Client<S> */))) /* ~ changed by cargo-mutants ~ */
   |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For more information about this error, try `rustc --explain E0061`.
error: could not compile `faktory` (lib) due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error: could not compile `faktory` (lib test) due to 1 previous error

*** result: Failure(101)
