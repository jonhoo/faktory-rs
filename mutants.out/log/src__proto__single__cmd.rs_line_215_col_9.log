
*** src/proto/single/cmd.rs:215:9: replace Hello::set_password with ()

*** mutation diff:
--- src/proto/single/cmd.rs
+++ replace Hello::set_password with ()
@@ -207,25 +207,17 @@
             password_hash: None,
             version: crate::proto::EXPECTED_PROTOCOL_VERSION,
         }
     }
 }
 
 impl Hello {
     pub fn set_password(&mut self, hi: &super::resp::Hi, password: &str) {
-        use sha2::{Digest, Sha256};
-        let mut hasher = Sha256::default();
-        hasher.update(password.as_bytes());
-        hasher.update(hi.salt.as_ref().unwrap().as_bytes());
-        let mut hash = hasher.finalize();
-        for _ in 1..hi.iterations.unwrap_or(1) {
-            hash = Sha256::digest(&hash[..]);
-        }
-        self.password_hash = Some(format!("{:x}", hash));
+        () /* ~ changed by cargo-mutants ~ */
     }
 }
 
 self_to_cmd!(Hello, "HELLO");
 
 // --------------------- PUSH --------------------
 
 pub(crate) struct Push(Job);


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 1.90s

*** result: Success

*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml --locked --all-features --all-targets
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished test [unoptimized + debuginfo] target(s) in 2.64s
     Running unittests src/lib.rs (target/debug/deps/faktory-248e4bd4cd431a2c)

running 35 tests
test proto::single::resp::test::it_decodes_json_empty ... ok
test proto::single::resp::test::it_decodes_json_nill ... ok
test proto::batch::test::test_batch_serialized_correctly ... ok
test proto::single::resp::test::it_decodes_blob_json ... ok
test proto::single::ent::test::test_same_purpose_setters_applied_simultaneously ... ok
test proto::single::ent::test::test_expiration_feature_for_enterprise_faktory ... ok
test proto::single::resp::test::it_decodes_json_ok_blob ... ok
test proto::single::resp::test::it_cant_do_arrays - should panic ... ok
test proto::batch::test::test_batch_creation ... ok
test proto::single::ent::test::test_uniqueness_faeture_for_enterprise_faktory ... ok
test proto::single::resp::test::it_decodes_json_ok_string ... ok
test proto::single::resp::test::it_errors_on_bad_json_blob ... ok
test proto::single::resp::test::it_decodes_string_json ... ok
test proto::single::resp::test::it_errors_on_bad_json_string ... ok
test proto::single::resp::test::it_errors_on_bad_sizes ... ok
test proto::single::resp::test::it_errors_on_bad_numbers ... ok
test proto::single::resp::test::it_errors_on_unknown_resp_type ... ok
test proto::single::resp::test::it_parses_empty_bulk ... ok
test proto::single::resp::test::it_parses_errors ... ok
test proto::single::resp::test::it_parses_nills ... ok
test proto::single::resp::test::it_parses_non_empty_bulk ... ok
test proto::single::resp::test::it_parses_numbers ... ok
test proto::single::resp::test::it_parses_simple_strings ... ok
test proto::single::resp::test::json_error_on_number ... ok
test proto::single::test::test_all_job_creation_variants_align ... ok
test proto::single::test::test_arbitrary_custom_data_setter ... ok
test proto::single::test::test_job_can_be_created_with_builder ... ok
test proto::single::utils::test::test_id_of_known_size_generated ... ok
test proto::utils::tests::correct_env_parsing ... ok
test proto::utils::tests::url_can_take_password_and_port ... ok
test proto::utils::tests::url_doesnt_require_port ... ok
test proto::utils::tests::url_port_default ... ok
test proto::utils::tests::url_requires_host ... ok
test proto::utils::tests::url_requires_tcp ... ok
test proto::single::utils::test::test_ids_are_unique ... ok

test result: ok. 35 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.16s

     Running unittests src/bin/loadtest.rs (target/debug/deps/loadtest-c216a21f6a383186)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/consumer.rs (target/debug/deps/consumer-e1d67c7fdddceb0c)

running 8 tests
test hello ... ok
test hello_pwd ... FAILED
test dequeue ... ok
test dequeue_first_empty ... ok
test terminate ... ok
test no_first_job ... ok
test well_behaved_many ... ok
test well_behaved ... ok

failures:

---- hello_pwd stdout ----
thread 'hello_pwd' panicked at tests/consumer.rs:49:5:
assertion `left == right` failed
  left: None
 right: Some("6d877f8e5544b1f2598768f817413ab8a357afffa924dedae99eb91472d4ec30")
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace


failures:
    hello_pwd

test result: FAILED. 7 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 10.14s

error: test failed, to rerun pass `--test consumer`

*** result: Failure(101)
