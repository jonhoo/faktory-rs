
*** src/proto/single/mod.rs:171:9: replace JobBuilder::args -> &mut Self with Box::leak(Box::new(Default::default()))

*** mutation diff:
--- src/proto/single/mod.rs
+++ replace JobBuilder::args -> &mut Self with Box::leak(Box::new(Default::default()))
@@ -163,18 +163,17 @@
     }
 
     /// Setter for the arguments provided for this job.
     pub fn args<I, V>(&mut self, args: I) -> &mut Self
     where
         I: IntoIterator<Item = V>,
         V: Into<serde_json::Value>,
     {
-        self.args = Some(args.into_iter().map(|s| s.into()).collect());
-        self
+        Box::leak(Box::new(Default::default())) /* ~ changed by cargo-mutants ~ */
     }
 
     /// Sets arbitrary key-value pairs to this job's custom data hash.
     pub fn add_to_custom_data(
         &mut self,
         k: impl Into<String>,
         v: impl Into<serde_json::Value>,
     ) -> &mut Self {


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
error[E0277]: the trait bound `JobBuilder: Default` is not satisfied
   --> src/proto/single/mod.rs:171:28
    |
171 |         Box::leak(Box::new(Default::default())) /* ~ changed by cargo-mutants ~ */
    |                            ^^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `JobBuilder`
    |
help: consider annotating `JobBuilder` with `#[derive(Default)]`
    |
65  | #[derive(Serialize, Deserialize, Debug, Clone, #[derive(Default)]
    |                                                ++++++++++++++++++

For more information about this error, try `rustc --explain E0277`.
error[E0277]: the trait bound `single::JobBuilder: Default` is not satisfied
   --> src/proto/single/mod.rs:171:28
    |
171 |         Box::leak(Box::new(Default::default())) /* ~ changed by cargo-mutants ~ */
    |                            ^^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `single::JobBuilder`
    |
help: consider annotating `single::JobBuilder` with `#[derive(Default)]`
    |
65  | #[derive(Serialize, Deserialize, Debug, Clone, #[derive(Default)]
    |                                                ++++++++++++++++++

error: could not compile `faktory` (lib) due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error: could not compile `faktory` (lib test) due to 1 previous error

*** result: Failure(101)
