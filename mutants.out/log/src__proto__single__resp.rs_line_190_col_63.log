
*** src/proto/single/resp.rs:190:63: replace - with / in read

*** mutation diff:
--- src/proto/single/resp.rs
+++ replace - with / in read
@@ -182,17 +182,17 @@
                 .into()),
             }
         }
         b'$' => {
             // Bulk String
             // https://redis.io/topics/protocol#resp-bulk-strings
             let mut bytes = Vec::with_capacity(32);
             r.read_until(b'\n', &mut bytes).await?;
-            let s = std::str::from_utf8(&bytes[0..bytes.len() - 2]).map_err(|_| {
+            let s = std::str::from_utf8(&bytes[0..bytes.len() / /* ~ changed by cargo-mutants ~ */ 2]).map_err(|_| {
                 error::Protocol::BadResponse {
                     typed_as: "bulk string",
                     error: "server bulk response contains non-utf8 size prefix",
                     bytes: bytes[0..bytes.len() - 2].to_vec(),
                 }
             })?;
 
             let size = s


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 1.10s

*** result: Success

*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml --locked --all-features --all-targets
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished test [unoptimized + debuginfo] target(s) in 1.48s
     Running unittests src/lib.rs (target/debug/deps/faktory-248e4bd4cd431a2c)

running 35 tests
test proto::single::resp::test::it_decodes_json_ok_blob ... ok
test proto::batch::test::test_batch_serialized_correctly ... ok
test proto::single::resp::test::it_decodes_string_json ... ok
test proto::single::resp::test::it_decodes_json_nill ... ok
test proto::single::resp::test::it_decodes_json_ok_string ... ok
test proto::single::resp::test::it_decodes_json_empty ... ok
test proto::single::resp::test::it_decodes_blob_json ... ok
test proto::single::ent::test::test_uniqueness_faeture_for_enterprise_faktory ... ok
test proto::single::resp::test::it_errors_on_bad_sizes ... ok
test proto::single::ent::test::test_same_purpose_setters_applied_simultaneously ... ok
test proto::batch::test::test_batch_creation ... ok
test proto::single::ent::test::test_expiration_feature_for_enterprise_faktory ... ok
test proto::single::resp::test::it_cant_do_arrays - should panic ... ok
test proto::single::resp::test::it_errors_on_unknown_resp_type ... ok
test proto::single::resp::test::it_parses_nills ... ok
test proto::single::resp::test::it_parses_non_empty_bulk ... ok
test proto::single::resp::test::it_parses_empty_bulk ... ok
test proto::single::resp::test::it_parses_numbers ... ok
test proto::single::resp::test::it_parses_errors ... ok
test proto::single::resp::test::it_errors_on_bad_json_string ... ok
test proto::single::resp::test::it_errors_on_bad_json_blob ... ok
test proto::single::resp::test::it_errors_on_bad_numbers ... ok
test proto::single::resp::test::it_parses_simple_strings ... ok
test proto::single::resp::test::json_error_on_number ... ok
test proto::single::test::test_arbitrary_custom_data_setter ... ok
test proto::single::utils::test::test_id_of_known_size_generated ... ok
test proto::utils::tests::correct_env_parsing ... ok
test proto::utils::tests::url_can_take_password_and_port ... ok
test proto::single::test::test_all_job_creation_variants_align ... ok
test proto::utils::tests::url_doesnt_require_port ... ok
test proto::utils::tests::url_port_default ... ok
test proto::utils::tests::url_requires_host ... ok
test proto::utils::tests::url_requires_tcp ... ok
test proto::single::test::test_job_can_be_created_with_builder ... ok
test proto::single::utils::test::test_ids_are_unique ... ok

test result: ok. 35 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.07s

     Running unittests src/bin/loadtest.rs (target/debug/deps/loadtest-c216a21f6a383186)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/consumer.rs (target/debug/deps/consumer-e1d67c7fdddceb0c)

running 8 tests
test dequeue ... FAILED
test dequeue_first_empty ... FAILED
test hello ... ok
test hello_pwd ... ok
test well_behaved ... FAILED
test terminate ... FAILED
test well_behaved_many ... FAILED
test no_first_job ... FAILED

failures:

---- dequeue stdout ----
Serialization(Error("EOF while parsing a string", line: 1, column: 18))
thread 'dequeue' panicked at tests/consumer.rs:85:9:
internal error: entered unreachable code

---- dequeue_first_empty stdout ----
Serialization(Error("EOF while parsing a string", line: 1, column: 18))
thread 'dequeue_first_empty' panicked at tests/consumer.rs:136:13:
internal error: entered unreachable code
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

---- well_behaved stdout ----
thread 'well_behaved' panicked at tests/consumer.rs:194:34:
called `Result::unwrap()` on an `Err` value: Serialization(Error("EOF while parsing a string", line: 1, column: 18))

---- terminate stdout ----
thread 'terminate' panicked at tests/consumer.rs:394:34:
called `Result::unwrap()` on an `Err` value: Serialization(Error("EOF while parsing a string", line: 1, column: 18))

---- well_behaved_many stdout ----
thread 'well_behaved_many' panicked at tests/consumer.rs:334:34:
called `Result::unwrap()` on an `Err` value: Serialization(Error("EOF while parsing a string", line: 1, column: 18))

---- no_first_job stdout ----
thread 'no_first_job' panicked at tests/consumer.rs:259:34:
called `Result::unwrap()` on an `Err` value: Serialization(Error("EOF while parsing a string", line: 1, column: 18))


failures:
    dequeue
    dequeue_first_empty
    no_first_job
    terminate
    well_behaved
    well_behaved_many

test result: FAILED. 2 passed; 6 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.12s

error: test failed, to rerun pass `--test consumer`

*** result: Failure(101)
