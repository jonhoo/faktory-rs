
*** src/proto/single/resp.rs:172:29: replace - with + in read

*** mutation diff:
--- src/proto/single/resp.rs
+++ replace - with + in read
@@ -164,17 +164,17 @@
         }
         b':' => {
             // Integer
             // https://redis.io/topics/protocol#resp-integers
             let mut s = String::with_capacity(32);
             r.read_line(&mut s).await?;
 
             // remove newlines
-            let l = s.len() - 2;
+            let l = s.len() + /* ~ changed by cargo-mutants ~ */ 2;
             s.truncate(l);
 
             match (*s).parse::<isize>() {
                 Ok(i) => Ok(RawResponse::Number(i)),
                 Err(_) => Err(error::Protocol::BadResponse {
                     typed_as: "integer",
                     error: "invalid integer value",
                     bytes: s.into_bytes(),


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 0.99s

*** result: Success

*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml --locked --all-features --all-targets
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished test [unoptimized + debuginfo] target(s) in 1.90s
     Running unittests src/lib.rs (target/debug/deps/faktory-248e4bd4cd431a2c)

running 35 tests
test proto::single::ent::test::test_same_purpose_setters_applied_simultaneously ... ok
test proto::single::resp::test::it_decodes_json_empty ... ok
test proto::batch::test::test_batch_serialized_correctly ... ok
test proto::single::resp::test::it_decodes_json_ok_blob ... ok
test proto::single::resp::test::it_decodes_json_ok_string ... ok
test proto::batch::test::test_batch_creation ... ok
test proto::single::ent::test::test_expiration_feature_for_enterprise_faktory ... ok
test proto::single::resp::test::it_decodes_blob_json ... ok
test proto::single::resp::test::it_decodes_string_json ... ok
test proto::single::resp::test::it_decodes_json_nill ... ok
test proto::single::ent::test::test_uniqueness_faeture_for_enterprise_faktory ... ok
test proto::single::resp::test::it_errors_on_bad_json_blob ... ok
test proto::single::resp::test::it_cant_do_arrays - should panic ... ok
test proto::single::resp::test::it_errors_on_bad_numbers ... ok
test proto::single::resp::test::it_errors_on_bad_sizes ... ok
test proto::single::resp::test::it_errors_on_bad_json_string ... ok
test proto::single::resp::test::it_parses_errors ... ok
test proto::single::resp::test::it_errors_on_unknown_resp_type ... ok
test proto::single::resp::test::it_parses_nills ... ok
test proto::single::resp::test::it_parses_empty_bulk ... ok
test proto::single::resp::test::it_parses_simple_strings ... ok
test proto::single::resp::test::it_parses_numbers ... FAILED
test proto::single::resp::test::it_parses_non_empty_bulk ... ok
test proto::single::resp::test::json_error_on_number ... FAILED
test proto::single::test::test_all_job_creation_variants_align ... ok
test proto::single::test::test_arbitrary_custom_data_setter ... ok
test proto::single::test::test_job_can_be_created_with_builder ... ok
test proto::single::utils::test::test_id_of_known_size_generated ... ok
test proto::utils::tests::correct_env_parsing ... ok
test proto::utils::tests::url_can_take_password_and_port ... ok
test proto::utils::tests::url_doesnt_require_port ... ok
test proto::utils::tests::url_port_default ... ok
test proto::utils::tests::url_requires_host ... ok
test proto::utils::tests::url_requires_tcp ... ok
test proto::single::utils::test::test_ids_are_unique ... ok

failures:

---- proto::single::resp::test::it_parses_numbers stdout ----
thread 'proto::single::resp::test::it_parses_numbers' panicked at src/proto/single/resp.rs:277:34:
called `Result::unwrap()` on an `Err` value: Protocol(BadResponse { typed_as: "integer", error: "invalid integer value", bytes: [49, 48, 50, 52, 13, 10] })

---- proto::single::resp::test::json_error_on_number stdout ----
thread 'proto::single::resp::test::json_error_on_number' panicked at src/proto/single/resp.rs:417:13:
internal error: entered unreachable code


failures:
    proto::single::resp::test::it_parses_numbers
    proto::single::resp::test::json_error_on_number

test result: FAILED. 33 passed; 2 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.02s

error: test failed, to rerun pass `--lib`

*** result: Failure(101)
