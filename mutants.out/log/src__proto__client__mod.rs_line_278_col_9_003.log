
*** src/proto/client/mod.rs:278:9: replace Client<S>::issue -> Result<ReadToken<'_, S>, Error> with Ok(ReadToken::from(Default::default()))

*** mutation diff:
--- src/proto/client/mod.rs
+++ replace Client<S>::issue -> Result<ReadToken<'_, S>, Error> with Ok(ReadToken::from(Default::default()))
@@ -270,18 +270,17 @@
         c.init().await?;
         Ok(c)
     }
 
     pub(crate) async fn issue<FC: single::FaktoryCommand>(
         &mut self,
         c: &FC,
     ) -> Result<ReadToken<'_, S>, Error> {
-        single::write_command(&mut self.stream, c).await?;
-        Ok(ReadToken(self))
+        Ok(ReadToken::from(Default::default())) /* ~ changed by cargo-mutants ~ */
     }
 
     pub(crate) async fn fetch<Q>(&mut self, queues: &[Q]) -> Result<Option<Job>, Error>
     where
         Q: AsRef<str> + Sync,
     {
         self.issue(&single::Fetch::from(queues))
             .await?


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
error[E0277]: the trait bound `ReadToken<'_, S>: Default` is not satisfied
   --> src/proto/client/mod.rs:278:28
    |
278 |         Ok(ReadToken::from(Default::default())) /* ~ changed by cargo-mutants ~ */
    |                            ^^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `ReadToken<'_, S>`

For more information about this error, try `rustc --explain E0277`.
error: could not compile `faktory` (lib) due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error: could not compile `faktory` (lib test) due to 1 previous error

*** result: Failure(101)
