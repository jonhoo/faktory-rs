
*** src/worker/builder.rs:45:9: replace WorkerBuilder<E>::wid -> &mut Self with Box::leak(Box::new(Default::default()))

*** mutation diff:
--- src/worker/builder.rs
+++ replace WorkerBuilder<E>::wid -> &mut Self with Box::leak(Box::new(Default::default()))
@@ -37,18 +37,17 @@
         self.opts.hostname = Some(hn);
         self
     }
 
     /// Set a unique identifier for this worker.
     ///
     /// Defaults to a randomly generated 32-char ASCII string.
     pub fn wid(&mut self, wid: WorkerId) -> &mut Self {
-        self.opts.wid = Some(wid);
-        self
+        Box::leak(Box::new(Default::default())) /* ~ changed by cargo-mutants ~ */
     }
 
     /// Set the labels to use for this worker.
     ///
     /// Defaults to `["rust"]`.
     pub fn labels(&mut self, labels: Vec<String>) -> &mut Self {
         self.opts.labels = labels;
         self


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 1.49s

*** result: Success

*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml --locked --all-features --all-targets
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished test [unoptimized + debuginfo] target(s) in 2.36s
     Running unittests src/lib.rs (target/debug/deps/faktory-248e4bd4cd431a2c)

running 35 tests
test proto::single::ent::test::test_uniqueness_faeture_for_enterprise_faktory ... ok
test proto::single::ent::test::test_same_purpose_setters_applied_simultaneously ... ok
test proto::single::ent::test::test_expiration_feature_for_enterprise_faktory ... ok
test proto::single::resp::test::it_decodes_blob_json ... ok
test proto::batch::test::test_batch_serialized_correctly ... ok
test proto::single::resp::test::it_decodes_json_empty ... ok
test proto::batch::test::test_batch_creation ... ok
test proto::single::resp::test::it_decodes_json_nill ... ok
test proto::single::resp::test::it_cant_do_arrays - should panic ... ok
test proto::single::resp::test::it_decodes_json_ok_blob ... ok
test proto::single::resp::test::it_decodes_json_ok_string ... ok
test proto::single::resp::test::it_errors_on_bad_json_blob ... ok
test proto::single::resp::test::it_errors_on_bad_json_string ... ok
test proto::single::resp::test::it_errors_on_bad_sizes ... ok
test proto::single::resp::test::it_errors_on_unknown_resp_type ... ok
test proto::single::resp::test::it_errors_on_bad_numbers ... ok
test proto::single::resp::test::it_parses_empty_bulk ... ok
test proto::single::resp::test::it_parses_errors ... ok
test proto::single::resp::test::it_parses_nills ... ok
test proto::single::resp::test::it_decodes_string_json ... ok
test proto::single::resp::test::it_parses_non_empty_bulk ... ok
test proto::single::resp::test::it_parses_numbers ... ok
test proto::single::resp::test::it_parses_simple_strings ... ok
test proto::single::test::test_all_job_creation_variants_align ... ok
test proto::single::test::test_arbitrary_custom_data_setter ... ok
test proto::single::test::test_job_can_be_created_with_builder ... ok
test proto::single::utils::test::test_id_of_known_size_generated ... ok
test proto::utils::tests::correct_env_parsing ... ok
test proto::utils::tests::url_can_take_password_and_port ... ok
test proto::utils::tests::url_doesnt_require_port ... ok
test proto::single::resp::test::json_error_on_number ... ok
test proto::utils::tests::url_port_default ... ok
test proto::utils::tests::url_requires_tcp ... ok
test proto::utils::tests::url_requires_host ... ok
test proto::single::utils::test::test_ids_are_unique ... ok

test result: ok. 35 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.22s

     Running unittests src/bin/loadtest.rs (target/debug/deps/loadtest-c216a21f6a383186)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/consumer.rs (target/debug/deps/consumer-e1d67c7fdddceb0c)

running 8 tests
test hello ... FAILED
test dequeue ... ok
test dequeue_first_empty ... ok
test hello_pwd ... ok
test terminate ... FAILED
test well_behaved ... FAILED
test well_behaved_many ... FAILED
test no_first_job ... FAILED

failures:

---- hello stdout ----
thread 'hello' panicked at tests/consumer.rs:24:5:
assertion `left == right` failed
  left: Some("q6lWpCTRo57ozNjWw9yMFxwfNbVyJV0m")
 right: Some("wid")
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

---- terminate stdout ----
thread 'terminate' panicked at tests/consumer.rs:399:5:
assertion `left == right` failed
  left: [66, 69, 65, 84, 32, 123, 34, 119, 105, 100, 34, 58, 34, 79, 65, 49, 86, 81, 100, 76, 86, 122, 49, 102, 81]
 right: [66, 69, 65, 84, 32, 123, 34, 119, 105, 100, 34, 58, 34, 119, 105, 100, 34, 125, 13, 10, 70, 65, 73, 76, 32]

---- well_behaved stdout ----
thread 'well_behaved' panicked at tests/consumer.rs:202:5:
assertion `left == right` failed
  left: "BEAT {\"wid\":\"Db2LIvTEgAaMRhrnM500Dj89asdK4k7n\"}\r\nBEAT {\"wid\":\"Db2LIvTEgAaMRhrnM500Dj89asdK4k7n\"}\r\nEND\r\n"
 right: "BEAT {\"wid\":\"wid\"}\r\nBEAT {\"wid\":\"wid\"}\r\nEND\r\n"

---- well_behaved_many stdout ----
thread 'well_behaved_many' panicked at tests/consumer.rs:342:5:
assertion `left == right` failed
  left: "BEAT {\"wid\":\"W7MPNg1USu1SCaAKQE9dadqC2Nlp4eRx\"}\r\nBEAT {\"wid\":\"W7MPNg1USu1SCaAKQE9dadqC2Nlp4eRx\"}\r\nEND\r\n"
 right: "BEAT {\"wid\":\"wid\"}\r\nBEAT {\"wid\":\"wid\"}\r\nEND\r\n"

---- no_first_job stdout ----
thread 'no_first_job' panicked at tests/consumer.rs:267:5:
assertion `left == right` failed
  left: "BEAT {\"wid\":\"4sqYMcoch0OkR6IlOHFQS52VJn1tNs9n\"}\r\nBEAT {\"wid\":\"4sqYMcoch0OkR6IlOHFQS52VJn1tNs9n\"}\r\nEND\r\n"
 right: "BEAT {\"wid\":\"wid\"}\r\nBEAT {\"wid\":\"wid\"}\r\nEND\r\n"


failures:
    hello
    no_first_job
    terminate
    well_behaved
    well_behaved_many

test result: FAILED. 3 passed; 5 failed; 0 ignored; 0 measured; 0 filtered out; finished in 10.14s

error: test failed, to rerun pass `--test consumer`

*** result: Failure(101)
