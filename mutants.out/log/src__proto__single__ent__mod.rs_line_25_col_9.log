
*** src/proto/single/ent/mod.rs:25:9: replace JobBuilder::expires_at -> &mut Self with Box::leak(Box::new(Default::default()))

*** mutation diff:
--- src/proto/single/ent/mod.rs
+++ replace JobBuilder::expires_at -> &mut Self with Box::leak(Box::new(Default::default()))
@@ -17,20 +17,17 @@
     /// # use faktory::JobBuilder;
     /// # use chrono::{Duration, Utc};
     /// let _job = JobBuilder::new("order")
     ///     .args(vec!["ISBN-14:9781718501850"])
     ///     .expires_at(Utc::now() + Duration::hours(0))
     ///     .build();
     /// ```
     pub fn expires_at(&mut self, dt: DateTime<Utc>) -> &mut Self {
-        self.add_to_custom_data(
-            "expires_at",
-            dt.to_rfc3339_opts(chrono::SecondsFormat::Nanos, true),
-        )
+        Box::leak(Box::new(Default::default())) /* ~ changed by cargo-mutants ~ */
     }
 
     /// In what period of time from now (UTC) the Faktory should expire this job.
     ///
     /// Under the hood, the method will call `Utc::now` and add the provided `ttl` duration.
     /// You can use this setter when you have a duration rather than some exact date and time,
     /// expected by [`expires_at`](JobBuilder::expires_at) setter.
     /// Example usage:


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 1.39s

*** result: Success

*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml --locked --all-features --all-targets
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
error[E0277]: the trait bound `JobBuilder: Default` is not satisfied
  --> src/proto/single/ent/mod.rs:25:28
   |
25 |         Box::leak(Box::new(Default::default())) /* ~ changed by cargo-mutants ~ */
   |                            ^^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `JobBuilder`
   |
help: consider annotating `JobBuilder` with `#[derive(Default)]`
  --> src/proto/single/mod.rs:65:48
   |
65 | #[derive(Serialize, Deserialize, Debug, Clone, #[derive(Default)]
   |                                                ++++++++++++++++++

For more information about this error, try `rustc --explain E0277`.
error: could not compile `faktory` (lib) due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error[E0277]: the trait bound `single::JobBuilder: Default` is not satisfied
  --> src/proto/single/ent/mod.rs:25:28
   |
25 |         Box::leak(Box::new(Default::default())) /* ~ changed by cargo-mutants ~ */
   |                            ^^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `single::JobBuilder`
   |
help: consider annotating `single::JobBuilder` with `#[derive(Default)]`
  --> src/proto/single/mod.rs:65:48
   |
65 | #[derive(Serialize, Deserialize, Debug, Clone, #[derive(Default)]
   |                                                ++++++++++++++++++

error: could not compile `faktory` (lib test) due to 1 previous error

*** result: Failure(101)
