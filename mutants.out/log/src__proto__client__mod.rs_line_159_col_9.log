
*** src/proto/client/mod.rs:159:9: replace Client<S>::connect_again -> Result<Self, Error> with Ok(Default::default())

*** mutation diff:
--- src/proto/client/mod.rs
+++ replace Client<S>::connect_again -> Result<Self, Error> with Ok(Default::default())
@@ -151,18 +151,17 @@
     opts: ClientOptions,
 }
 
 impl<S> Client<S>
 where
     S: AsyncBufReadExt + AsyncWriteExt + Unpin + Send + Reconnect,
 {
     pub(crate) async fn connect_again(&mut self) -> Result<Self, Error> {
-        let s = self.stream.reconnect().await?;
-        Client::new(s, self.opts.clone()).await
+        Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 
     pub(crate) async fn reconnect(&mut self) -> Result<(), Error> {
         self.stream = self.stream.reconnect().await?;
         self.init().await
     }
 }
 


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
error[E0277]: the trait bound `Client<S>: Default` is not satisfied
   --> src/proto/client/mod.rs:159:12
    |
159 |         Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
    |            ^^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `Client<S>`

For more information about this error, try `rustc --explain E0277`.
error: could not compile `faktory` (lib) due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error: could not compile `faktory` (lib test) due to 1 previous error

*** result: Failure(101)
