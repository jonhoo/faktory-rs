
*** src/proto/single/resp.rs:37:5: replace read_json -> Result<Option<T>, Error> with Ok(None)

*** mutation diff:
--- src/proto/single/resp.rs
+++ replace read_json -> Result<Option<T>, Error> with Ok(None)
@@ -29,42 +29,17 @@
     }
 }
 
 // ----------------------------------------------
 
 pub async fn read_json<R: AsyncBufReadExt + Unpin, T: serde::de::DeserializeOwned>(
     r: R,
 ) -> Result<Option<T>, Error> {
-    let rr = read(r).await?;
-    match rr {
-        RawResponse::String(ref s) if s == "OK" => {
-            return Ok(None);
-        }
-        RawResponse::String(ref s) => {
-            return serde_json::from_str(s)
-                .map(Some)
-                .map_err(Error::Serialization);
-        }
-        RawResponse::Blob(ref b) if b == b"OK" => {
-            return Ok(None);
-        }
-        RawResponse::Blob(ref b) => {
-            if b.is_empty() {
-                return Ok(None);
-            }
-            return serde_json::from_slice(b)
-                .map(Some)
-                .map_err(Error::Serialization);
-        }
-        RawResponse::Null => return Ok(None),
-        _ => {}
-    };
-
-    Err(bad("json", &rr).into())
+    Ok(None) /* ~ changed by cargo-mutants ~ */
 }
 
 // ----------------------------------------------
 
 #[cfg(feature = "ent")]
 pub async fn read_bid<R: AsyncBufReadExt + Unpin>(r: R) -> Result<BatchId, Error> {
     match read(r).await? {
         RawResponse::Blob(ref b) if b.is_empty() => Err(error::Protocol::BadType {


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished dev [unoptimized + debuginfo] target(s) in 1.21s

*** result: Success

*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test --manifest-path /tmp/cargo-mutants-faktory-rs-3ziugm.tmp/Cargo.toml --locked --all-features --all-targets
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-3ziugm.tmp)
    Finished test [unoptimized + debuginfo] target(s) in 1.83s
     Running unittests src/lib.rs (target/debug/deps/faktory-248e4bd4cd431a2c)

running 35 tests
test proto::single::resp::test::it_decodes_json_empty ... ok
test proto::single::resp::test::it_decodes_json_ok_string ... ok
test proto::single::resp::test::it_cant_do_arrays - should panic ... ok
test proto::batch::test::test_batch_serialized_correctly ... ok
test proto::single::ent::test::test_same_purpose_setters_applied_simultaneously ... ok
test proto::single::resp::test::it_decodes_json_ok_blob ... ok
test proto::single::resp::test::it_errors_on_unknown_resp_type ... FAILED
test proto::single::resp::test::it_errors_on_bad_sizes ... ok
test proto::single::resp::test::it_decodes_blob_json ... FAILED
test proto::single::resp::test::it_errors_on_bad_json_string ... FAILED
test proto::single::resp::test::it_errors_on_bad_numbers ... ok
test proto::batch::test::test_batch_creation ... ok
test proto::single::resp::test::it_errors_on_bad_json_blob ... FAILED
test proto::single::resp::test::it_decodes_string_json ... FAILED
test proto::single::ent::test::test_expiration_feature_for_enterprise_faktory ... ok
test proto::single::ent::test::test_uniqueness_faeture_for_enterprise_faktory ... ok
test proto::single::resp::test::it_parses_empty_bulk ... ok
test proto::single::resp::test::it_decodes_json_nill ... ok
test proto::single::resp::test::it_parses_nills ... ok
test proto::single::resp::test::it_parses_errors ... ok
test proto::single::resp::test::it_parses_numbers ... ok
test proto::single::resp::test::it_parses_non_empty_bulk ... ok
test proto::single::resp::test::it_parses_simple_strings ... ok
test proto::single::resp::test::json_error_on_number ... FAILED
test proto::single::test::test_all_job_creation_variants_align ... ok
test proto::single::test::test_arbitrary_custom_data_setter ... ok
test proto::single::test::test_job_can_be_created_with_builder ... ok
test proto::single::utils::test::test_id_of_known_size_generated ... ok
test proto::utils::tests::url_port_default ... ok
test proto::utils::tests::url_requires_host ... ok
test proto::utils::tests::url_requires_tcp ... ok
test proto::utils::tests::correct_env_parsing ... ok
test proto::utils::tests::url_doesnt_require_port ... ok
test proto::utils::tests::url_can_take_password_and_port ... ok
test proto::single::utils::test::test_ids_are_unique ... ok

failures:

---- proto::single::resp::test::it_errors_on_unknown_resp_type stdout ----
thread 'proto::single::resp::test::it_errors_on_unknown_resp_type' panicked at src/proto/single/resp.rs:401:33:
called `Result::unwrap_err()` on an `Ok` value: None

---- proto::single::resp::test::it_decodes_blob_json stdout ----
thread 'proto::single::resp::test::it_decodes_blob_json' panicked at src/proto/single/resp.rs:358:9:
assertion `left == right` failed
  left: None
 right: Some(Object {"hello": Number(1)})

---- proto::single::resp::test::it_errors_on_bad_json_string stdout ----
thread 'proto::single::resp::test::it_errors_on_bad_json_string' panicked at src/proto/single/resp.rs:374:63:
called `Result::unwrap_err()` on an `Ok` value: None

---- proto::single::resp::test::it_errors_on_bad_json_blob stdout ----
thread 'proto::single::resp::test::it_errors_on_bad_json_blob' panicked at src/proto/single/resp.rs:364:63:
called `Result::unwrap_err()` on an `Ok` value: None

---- proto::single::resp::test::it_decodes_string_json stdout ----
thread 'proto::single::resp::test::it_decodes_string_json' panicked at src/proto/single/resp.rs:350:9:
assertion `left == right` failed
  left: None
 right: Some(Object {"hello": Number(1)})
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

---- proto::single::resp::test::json_error_on_number stdout ----
thread 'proto::single::resp::test::json_error_on_number' panicked at src/proto/single/resp.rs:387:33:
called `Result::unwrap_err()` on an `Ok` value: None


failures:
    proto::single::resp::test::it_decodes_blob_json
    proto::single::resp::test::it_decodes_string_json
    proto::single::resp::test::it_errors_on_bad_json_blob
    proto::single::resp::test::it_errors_on_bad_json_string
    proto::single::resp::test::it_errors_on_unknown_resp_type
    proto::single::resp::test::json_error_on_number

test result: FAILED. 29 passed; 6 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.20s

error: test failed, to rerun pass `--lib`

*** result: Failure(101)
