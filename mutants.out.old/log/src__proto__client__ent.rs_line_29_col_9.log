
*** src/proto/client/ent.rs:29:9: replace Client<S>::start_batch -> Result<BatchHandle<'_, S>, Error> with Ok(BatchHandle::from_iter([Default::default()]))

*** mutation diff:
--- src/proto/client/ent.rs
+++ replace Client<S>::start_batch -> Result<BatchHandle<'_, S>, Error> with Ok(BatchHandle::from_iter([Default::default()]))
@@ -21,18 +21,17 @@
     /// Fetch information on a batch of jobs execution progress.
     pub async fn get_batch_status(&mut self, bid: BatchId) -> Result<Option<BatchStatus>, Error> {
         let cmd = GetBatchStatus::from(bid);
         self.issue(&cmd).await?.read_json().await
     }
 
     /// Initiate a new batch of jobs.
     pub async fn start_batch(&mut self, batch: Batch) -> Result<BatchHandle<'_, S>, Error> {
-        let bid = self.issue(&batch).await?.read_bid().await?;
-        Ok(BatchHandle::new(bid, self))
+        Ok(BatchHandle::from_iter([Default::default()])) /* ~ changed by cargo-mutants ~ */
     }
 
     /// Open an already existing batch of jobs.
     ///
     /// This will not error if a batch with the provided `bid` does not exist,
     /// rather `Ok(None)` will be returned.
     pub async fn open_batch(&mut self, bid: BatchId) -> Result<Option<BatchHandle<'_, S>>, Error> {
         let bid = self.issue(&OpenBatch::from(bid)).await?.maybe_bid().await?;


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-jIMFg4.tmp/Cargo.toml --all-features
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-jIMFg4.tmp)
error[E0599]: no function or associated item named `from_iter` found for struct `BatchHandle` in the current scope
  --> src/proto/client/ent.rs:29:25
   |
29 |         Ok(BatchHandle::from_iter([Default::default()])) /* ~ changed by cargo-mutants ~ */
   |                         ^^^^^^^^^ function or associated item not found in `BatchHandle<'_, _>`
   |
  ::: src/proto/batch/handle.rs:6:1
   |
6  | pub struct BatchHandle<'a, S: AsyncBufReadExt + AsyncWriteExt + Unpin + Send> {
   | ----------------------------------------------------------------------------- function or associated item `from_iter` not found for this struct
   |
note: if you're trying to build a new `BatchHandle<'_, _>`, consider using `BatchHandle::<'a, S>::new` which returns `BatchHandle<'_, S>`
  --> src/proto/batch/handle.rs:17:5
   |
17 |     pub(crate) fn new(bid: BatchId, c: &mut Client<S>) -> BatchHandle<'_, S> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following trait defines an item `from_iter`, perhaps you need to implement it:
           candidate #1: `FromIterator`

For more information about this error, try `rustc --explain E0599`.
error: could not compile `faktory` (lib) due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error: could not compile `faktory` (lib test) due to 1 previous error

*** result: Failure(101)
