
*** src/worker/builder.rs:99:9: replace WorkerBuilder<E>::connect_with -> Result<Worker<BufStream<S>, E>, Error> with Ok(Default::default())

*** mutation diff:
--- src/worker/builder.rs
+++ replace WorkerBuilder<E>::connect_with -> Result<Worker<BufStream<S>, E>, Error> with Ok(Default::default())
@@ -91,21 +91,17 @@
     }
 
     /// Asynchronously connect to a Faktory server with a non-standard stream.
     pub async fn connect_with<S: AsyncRead + AsyncWrite + Send + Unpin>(
         mut self,
         stream: S,
         pwd: Option<String>,
     ) -> Result<Worker<BufStream<S>, E>, Error> {
-        self.opts.password = pwd;
-        self.opts.is_worker = true;
-        let buffered = BufStream::new(stream);
-        let client = Client::new(buffered, self.opts).await?;
-        Ok(Worker::new(client, self.workers_count, self.callbacks).await)
+        Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
     }
 
     /// Asynchronously connect to a Faktory server.
     ///
     /// See [`connect`](WorkerBuilder::connect).
     pub async fn connect(
         mut self,
         url: Option<&str>,


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-jIMFg4.tmp/Cargo.toml --all-features
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-jIMFg4.tmp)
error[E0277]: the trait bound `Worker<BufStream<S>, E>: Default` is not satisfied
  --> src/worker/builder.rs:99:12
   |
99 |         Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
   |            ^^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `Worker<BufStream<S>, E>`

For more information about this error, try `rustc --explain E0277`.
error: could not compile `faktory` (lib) due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error: could not compile `faktory` (lib test) due to 1 previous error

*** result: Failure(101)
