
*** src/proto/single/resp.rs:98:5: replace read_hi -> Result<Hi, Error> with Ok(Default::default())

*** mutation diff:
--- src/proto/single/resp.rs
+++ replace read_hi -> Result<Hi, Error> with Ok(Default::default())
@@ -90,23 +90,17 @@
     pub version: usize,
     #[serde(rename = "i")]
     pub iterations: Option<usize>,
     #[serde(rename = "s")]
     pub salt: Option<String>,
 }
 
 pub async fn read_hi<R: AsyncBufReadExt + Unpin>(r: R) -> Result<Hi, Error> {
-    let rr = read(r).await?;
-    if let RawResponse::String(ref s) = rr {
-        if let Some(s) = s.strip_prefix("HI ") {
-            return serde_json::from_str(s).map_err(Error::Serialization);
-        }
-    }
-    Err(bad("server hi", &rr).into())
+    Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
 }
 
 // ----------------------------------------------
 
 pub async fn read_ok<R: AsyncBufReadExt + Unpin>(r: R) -> Result<(), Error> {
     let rr = read(r).await?;
     if let RawResponse::String(ref s) = rr {
         if s == "OK" {


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-jIMFg4.tmp/Cargo.toml --all-features
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-jIMFg4.tmp)
error[E0277]: the trait bound `Hi: Default` is not satisfied
  --> src/proto/single/resp.rs:98:8
   |
98 |     Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
   |        ^^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `Hi`
   |
help: consider annotating `Hi` with `#[derive(Default)]`
   |
88 + #[derive(Default)]
89 | pub struct Hi {
   |

For more information about this error, try `rustc --explain E0277`.
error: could not compile `faktory` (lib) due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error: could not compile `faktory` (lib test) due to 1 previous error

*** result: Failure(101)
