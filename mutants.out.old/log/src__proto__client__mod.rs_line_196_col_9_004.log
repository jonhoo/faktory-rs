
*** src/proto/client/mod.rs:196:9: replace Client<BufStream<S>>::connect_with -> Result<Client<BufStream<S>>, Error> with Ok(Client::from_iter([BufStream::from_iter([Default::default()])]))

*** mutation diff:
--- src/proto/client/mod.rs
+++ replace Client<BufStream<S>>::connect_with -> Result<Client<BufStream<S>>, Error> with Ok(Client::from_iter([BufStream::from_iter([Default::default()])]))
@@ -188,22 +188,17 @@
 }
 
 impl<S: AsyncRead + AsyncWrite + Send + Unpin> Client<BufStream<S>> {
     /// Create new [`Client`] and connect to a Faktory server with a non-standard stream.
     pub async fn connect_with(
         stream: S,
         pwd: Option<String>,
     ) -> Result<Client<BufStream<S>>, Error> {
-        let buffered = BufStream::new(stream);
-        let opts = ClientOptions {
-            password: pwd,
-            ..Default::default()
-        };
-        Client::new(buffered, opts).await
+        Ok(Client::from_iter([BufStream::from_iter([Default::default()])])) /* ~ changed by cargo-mutants ~ */
     }
 }
 
 impl Client<BufStream<TokioStream>> {
     /// Create new [`Client`] and connect to a Faktory server.
     ///
     /// If `url` is not given, will use the standard Faktory environment variables. Specifically,
     /// `FAKTORY_PROVIDER` is read to get the name of the environment variable to get the address


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-jIMFg4.tmp/Cargo.toml --all-features
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-jIMFg4.tmp)
error[E0599]: no function or associated item named `from_iter` found for struct `Client` in the current scope
   --> src/proto/client/mod.rs:196:20
    |
149 | pub struct Client<S: AsyncBufReadExt + AsyncWriteExt + Send + Unpin> {
    | -------------------------------------------------------------------- function or associated item `from_iter` not found for this struct
...
196 |         Ok(Client::from_iter([BufStream::from_iter([Default::default()])])) /* ~ changed by cargo-mutants ~ */
    |                    ^^^^^^^^^ function or associated item not found in `Client<_>`
    |
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `from_iter`, perhaps you need to implement it:
            candidate #1: `FromIterator`

error[E0599]: no function or associated item named `from_iter` found for struct `BufStream` in the current scope
   --> src/proto/client/mod.rs:196:42
    |
196 |         Ok(Client::from_iter([BufStream::from_iter([Default::default()])])) /* ~ changed by cargo-mutants ~ */
    |                                          ^^^^^^^^^ function or associated item not found in `BufStream<_>`
    |
note: if you're trying to build a new `BufStream<_>` consider using one of the following associated functions:
      BufStream::<RW>::new
      BufStream::<RW>::with_capacity
   --> /home/pavel/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.36.0/src/io/util/buf_stream.rs:29:5
    |
29  |       pub fn new(stream: RW) -> BufStream<RW> {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
39  | /     pub fn with_capacity(
40  | |         reader_capacity: usize,
41  | |         writer_capacity: usize,
42  | |         stream: RW,
43  | |     ) -> BufStream<RW> {
    | |______________________^

For more information about this error, try `rustc --explain E0599`.
error: could not compile `faktory` (lib) due to 2 previous errors
warning: build failed, waiting for other jobs to finish...
error: could not compile `faktory` (lib test) due to 2 previous errors

*** result: Failure(101)
