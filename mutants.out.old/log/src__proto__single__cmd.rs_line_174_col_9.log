
*** src/proto/single/cmd.rs:174:9: replace <impl From for Fetch<'a, S>>::from -> Self with Default::default()

*** mutation diff:
--- src/proto/single/cmd.rs
+++ replace <impl From for Fetch<'a, S>>::from -> Self with Default::default()
@@ -166,17 +166,17 @@
     }
 }
 
 impl<'a, S> From<&'a [S]> for Fetch<'a, S>
 where
     S: AsRef<str> + 'a,
 {
     fn from(queues: &'a [S]) -> Self {
-        Fetch { queues }
+        Default::default() /* ~ changed by cargo-mutants ~ */
     }
 }
 
 // --------------------- HELLO --------------------
 
 #[derive(Serialize)]
 pub(crate) struct Hello {
     #[serde(skip_serializing_if = "Option::is_none")]


*** /home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo build --tests --manifest-path /tmp/cargo-mutants-faktory-rs-jIMFg4.tmp/Cargo.toml --all-features
   Compiling faktory v0.12.5 (/tmp/cargo-mutants-faktory-rs-jIMFg4.tmp)
error[E0277]: the trait bound `single::cmd::Fetch<'_, S>: Default` is not satisfied
   --> src/proto/single/cmd.rs:174:9
    |
174 |         Default::default() /* ~ changed by cargo-mutants ~ */
    |         ^^^^^^^^^^^^^^^^^^ the trait `Default` is not implemented for `single::cmd::Fetch<'_, S>`
    |
help: consider annotating `single::cmd::Fetch<'_, S>` with `#[derive(Default)]`
    |
150 + #[derive(Default)]
151 | pub(crate) struct Fetch<'a, S>
    |

For more information about this error, try `rustc --explain E0277`.
error: could not compile `faktory` (lib) due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error: could not compile `faktory` (lib test) due to 1 previous error

*** result: Failure(101)
